@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant "logic:LogicManager" as LogicManager LOGIC_COLOR
participant "addressbookParser:AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeleteStudentCommandParser" as DeleteStudentCommandParser LOGIC_COLOR
participant "command:DeleteStudentCommand" as DeleteStudentCommand LOGIC_COLOR
participant "commandResult:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "model:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delete_s 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delete_s 1")
activate AddressBookParser

create DeleteStudentCommandParser
AddressBookParser -> DeleteStudentCommandParser
activate DeleteStudentCommandParser

DeleteStudentCommandParser --> AddressBookParser
deactivate DeleteStudentCommandParser

AddressBookParser -> DeleteStudentCommandParser : parse("1")
activate DeleteStudentCommandParser

create DeleteStudentCommand
DeleteStudentCommandParser -> DeleteStudentCommand
activate DeleteStudentCommand

DeleteStudentCommand --> DeleteStudentCommandParser
deactivate DeleteStudentCommand

DeleteStudentCommandParser --> AddressBookParser: command
deactivate DeleteStudentCommandParser
destroy DeleteStudentCommandParser

AddressBookParser --> LogicManager: command
deactivate AddressBookParser

LogicManager -> DeleteStudentCommand : execute(model)
activate DeleteStudentCommand

DeleteStudentCommand -> Model : getFilteredPersonList()
activate Model
Model --> DeleteStudentCommand: lastShownList
deactivate Model

DeleteStudentCommand -> Model : deletePerson(personToDelete)
activate Model

Model --> DeleteStudentCommand
deactivate Model

create CommandResult
DeleteStudentCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteStudentCommand
deactivate CommandResult

DeleteStudentCommand --> LogicManager: commandResult
deactivate DeleteStudentCommand

[<--LogicManager
deactivate LogicManager
@enduml
